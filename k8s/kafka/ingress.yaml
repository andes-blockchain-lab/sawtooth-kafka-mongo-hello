# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: ingress-kafka
#   annotations:
#     # use the shared ingress-nginx
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/rewrite-target: /
#     # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#     # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
# spec:
#   rules:
#   - host: kafka-release
#     http:
#       paths:
#       - backend:
#           serviceName: kafka-release
#           servicePort: 9092

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-lb
spec:
  selector:
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: kafka-release
    app.kubernetes.io/name: kafka
  ports:
    - name: kfk-nodeport
      port: 9092
      nodePort: 30092
  type: LoadBalancer

 
---

# apiVersion: v1
# kind: Service
# metadata:
#   name: kafka-lb2
# spec:
#   selector:
#     app.kubernetes.io/component: kafka
#     app.kubernetes.io/instance: kafka-release
#     app.kubernetes.io/name: kafka
#   ports:
#     - name: kfk-nodeport
#       port: 9092
#       nodePort: 30092
#   type: LoadBalancer
  
  
# kafka-release-0.kafka-release-headless.default.svc.cluster.local:9092
---


apiVersion: v1
kind: Pod
metadata:
  name: app-pod
  labels:
    app: app-pod

spec:
  containers:
    - name: app-container
      image: le999/app:1.0
      # ports:
      #   - containerPort: 6379
      env:
        - name: HOST_CONSUMER
          value: kafka-release.default.svc.cluster.local
        - name: HOST_PRODUCER
          value: kafka-release-0.kafka-release-headless.default.svc.cluster.local:9092

